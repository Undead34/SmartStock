










// import * as React from "react";
// import {
//   Table,
//   Header,
//   HeaderRow,
//   Body,
//   Row,
//   HeaderCell,
//   Cell,
// } from "@table-library/react-table-library/table";
// import { useTheme } from "@table-library/react-table-library/theme";
// import { Toaster, toast } from "sonner"

// const nodes = [
//   {
//     id: "0",
//     equipment_name: "Laptop Dell 11th Gen Core i7-1165G7",
//     equipment_type: "Laptop",
//     serial_number: "H0RHJL3",
//     model: "Latitude 3420",
//     code: "LPD01",
//     entry_date: new Date(2023, 8, 8),
//     observation: "Dell Latitude 14 3420 | 11th Gen Core i7-1165G7 | 8 GB | 256GB SSD | Intel Integrated Graphics | 14' HD Non-Touch | Win 11 Pro",
//     location: "Venezuela",
//   },
// ];


// const Component = () => {
//   const [data, setData] = React.useState({ nodes });
//   const [editable, setEditable] = React.useState(false)

//   const theme = useTheme({
//     Table: "--data-table-library_grid-template-columns: auto auto auto auto auto auto auto;"
//   });

//   const handleUpdate = (value, id, property) => {
//     setData((state) => ({
//       ...state,
//       nodes: state.nodes.map((node) => {
//         if (node.id === id) {
//           return { ...node, [property]: value };
//         } else {
//           return node;
//         }
//       }),
//     }));
//   };

//   return (
//     <>
//       <Toaster richColors />
//       <Table data={data} theme={theme} layout={{ custom: true }}>
//         {(tableList) => (
//           <>
//             <Header>
//               <HeaderRow className="text-inherit">
//                 <HeaderCell>Nombre del equipo</HeaderCell>
//                 <HeaderCell>Tipo de equipo</HeaderCell>
//                 <HeaderCell>Número de serie</HeaderCell>
//                 <HeaderCell>Código de modelo</HeaderCell>
//                 <HeaderCell>Fecha de entrada</HeaderCell>
//                 <HeaderCell>Lugar</HeaderCell>
//                 <HeaderCell>Observación</HeaderCell>
//               </HeaderRow>
//             </Header>

//             <Body>
//               {tableList.map((item) => (
//                 <Row key={item.id} item={item}>
//                   <Cell>
//                     {
//                       editable ? (
//                         <input
//                           type="text"
//                           value={item.equipment_name}
//                           autoFocus
//                           onBlur={() => {
//                             setEditable(!editable); toast.success("Guardado con exito!")
//                           }}
//                           onChange={(event) =>
//                             handleUpdate(event.target.value.trim(), item.id, "equipment_name")
//                           }
//                         />
//                       ) : (
//                         <div onClick={() => { setEditable(!editable) }}>
//                           {item.equipment_name}
//                         </div>
//                       )
//                     }
//                   </Cell>
//                   <Cell>2</Cell>
//                   <Cell>3</Cell>
//                   <Cell>4</Cell>
//                   <Cell>5</Cell>
//                   <Cell>6</Cell>
//                   <Cell>7</Cell>
//                 </Row>
//               ))}
//             </Body>
//           </>
//         )}
//       </Table>
//     </>
//   );
// };

// export default Component;









/*
          <Cell>
                  <input
                    type="date"
                    style={{
                      width: "100%",
                      border: "none",
                      fontSize: "1rem",
                      padding: 0,
                      margin: 0,
                    }}
                    value={item.deadline.toISOString().substr(0, 10)}
                    onChange={(event) =>
                      handleUpdate(
                        new Date(event.target.value),
                        item.id,
                        "deadline"
                      )
                    }
                  />
                </Cell>
                <Cell>
                  <select
                    style={{
                      width: "100%",
                      border: "none",
                      fontSize: "1rem",
                      padding: 0,
                      margin: 0,
                    }}
                    value={item.type}
                    onChange={(event) =>
                      handleUpdate(event.target.value, item.id, "type")
                    }
                  >
                    <option value="SETUP">SETUP</option>
                    <option value="LEARN">LEARN</option>
                  </select>
                </Cell>
                <Cell>
                  <input
                    type="checkbox"
                    checked={item.isComplete}
                    onChange={(event) =>
                      handleUpdate(event.target.checked, item.id, "isComplete")
                    }
                  />
                </Cell>
                <Cell>
                  <input
                    type="number"
                    style={{
                      width: "100%",
                      border: "none",
                      fontSize: "1rem",
                      padding: 0,
                      margin: 0,
                    }}
                    value={
                      typeof item.nodes === "number"
                        ? item.nodes
                        : item.nodes?.length
                    }
                    onChange={(event) =>
                      handleUpdate(Number(event.target.value), item.id, "nodes")
                    }
                  />
                </Cell>
*/







// import * as React from 'react';

// import {
//   Table,
//   Header,
//   HeaderRow,
//   Body,
//   Row,
//   HeaderCell,
//   Cell,
// } from '@table-library/react-table-library/table';
// import { useTheme } from '@table-library/react-table-library/theme';
// import { getTheme } from '@table-library/react-table-library/baseline';

// const nodes = [
//   {
//     id: '0',
//     name: 'Shopping List',
//     deadline: new Date(2020, 1, 15),
//     type: 'TASK',
//     isComplete: true,
//     nodes: 3,
//   },
// ];

// const key = 'Composed Table';

// export default function Component()  {
//   const data = { nodes };

//   const theme = useTheme(getTheme());

//   return (
//     <Table data={data} theme={theme}>
//       {(tableList) => (
//         <>
//           <Header>
//             <HeaderRow>
//               <HeaderCell>Task</HeaderCell>
//               <HeaderCell>Deadline</HeaderCell>
//               <HeaderCell>Type</HeaderCell>
//               <HeaderCell>Complete</HeaderCell>
//               <HeaderCell>Tasks</HeaderCell>
//             </HeaderRow>
//           </Header>

//           <Body>
//             {tableList.map((item) => (
//               <Row key={item.id} item={item}>
//                 <Cell>{item.name}</Cell>
//                 <Cell>
//                   {item.deadline.toLocaleDateString('en-US', {
//                     year: 'numeric',
//                     month: '2-digit',
//                     day: '2-digit',
//                   })}
//                 </Cell>
//                 <Cell>{item.type}</Cell>
//                 <Cell>{item.isComplete.toString()}</Cell>
//                 <Cell>{item.nodes?.length}</Cell>
//               </Row>
//             ))}
//           </Body>
//         </>
//       )}
//     </Table>
//   );
// };


// import { CompactTable } from '@table-library/react-table-library/compact';
// import React from "react"

// const nodes = [
//   {
//     id: '0',
//     name: 'Shopping List',
//     deadline: new Date(2020, 1, 15),
//     type: 'TASK',
//     isComplete: true,
//     nodes: 3,
//   },
// ];

// const COLUMNS = [
//   { label: 'Task', renderCell: (item) => item.name },
//   {
//     label: 'Deadline',
//     renderCell: (item) =>
//       item.deadline.toLocaleDateString('en-US', {
//         year: 'numeric',
//         month: '2-digit',
//         day: '2-digit',
//       }),
//   },
//   { label: 'Type', renderCell: (item) => item.type },
//   {
//     label: 'Complete',
//     renderCell: (item) => item.isComplete.toString(),
//   },
//   { label: 'Tasks', renderCell: (item) => item.nodes },
// ];

// export default function Component() {
//   const data = { nodes };

//   return <CompactTable columns={COLUMNS} data={data} />;
// };


// import { Body, Row, HeaderCell, Cell } from "@table-library/react-table-library/table";
// import { Table, Header, HeaderRow } from "@table-library/react-table-library/table";
// import React from "react";

// const Component = ({ nodes }) => {
//   const [data, setData] = React.useState({ nodes });

//   const handleUpdate = (value, id, property) => {
//     setData((state) => ({
//       ...state,
//       nodes: state.nodes.map((node) => {
//         if (node.id === id) {
//           return { ...node, [property]: value };
//         } else {
//           return node;
//         }
//       }),
//     }));
//   };

//   return (
//     <Table data={data}>
//       {(tableList) => (
//         console.log(tableList)
//       )}
//     </Table>
//   );
// };

// export default Component;


// {(tableList) => (
//   <>
//     <Header>
//       <HeaderRow>
//         <HeaderCell>Task</HeaderCell>
//         <HeaderCell>Deadline</HeaderCell>
//         <HeaderCell>Type</HeaderCell>
//         <HeaderCell>Complete</HeaderCell>
//         <HeaderCell>Tasks</HeaderCell>
//       </HeaderRow>
//     </Header>

//     <Body>
//       {tableList.map((item) => (
//         <Row key={item.id} item={item}>
//           <Cell>
//             <input
//               type="text"
//               style={{
//                 width: "100%",
//                 border: "none",
//                 fontSize: "1rem",
//                 padding: 0,
//                 margin: 0,
//               }}
//               value={item.name}
//               onChange={(event) =>
//                 handleUpdate(event.target.value, item.id, "name")
//               }
//             />
//           </Cell>
//           <Cell>
//             <input
//               type="date"
//               style={{
//                 width: "100%",
//                 border: "none",
//                 fontSize: "1rem",
//                 padding: 0,
//                 margin: 0,
//               }}
//               value={item.deadline.toISOString().substr(0, 10)}
//               onChange={(event) =>
//                 handleUpdate(
//                   new Date(event.target.value),
//                   item.id,
//                   "deadline"
//                 )
//               }
//             />
//           </Cell>
//           <Cell>
//             <select
//               style={{
//                 width: "100%",
//                 border: "none",
//                 fontSize: "1rem",
//                 padding: 0,
//                 margin: 0,
//               }}
//               value={item.type}
//               onChange={(event) =>
//                 handleUpdate(event.target.value, item.id, "type")
//               }
//             >
//               <option value="SETUP">SETUP</option>
//               <option value="LEARN">LEARN</option>
//             </select>
//           </Cell>
//           <Cell>
//             <input
//               type="checkbox"
//               checked={item.isComplete}
//               onChange={(event) =>
//                 handleUpdate(event.target.checked, item.id, "isComplete")
//               }
//             />
//           </Cell>
//           <Cell>
//             <input
//               type="number"
//               style={{
//                 width: "100%",
//                 border: "none",
//                 fontSize: "1rem",
//                 padding: 0,
//                 margin: 0,
//               }}
//               value={
//                 typeof item.nodes === "number"
//                   ? item.nodes
//                   : item.nodes?.length
//               }
//               onChange={(event) =>
//                 handleUpdate(Number(event.target.value), item.id, "nodes")
//               }
//             />
//           </Cell>
//         </Row>
//       ))}
//     </Body>
//   </>
// )}



















// <div className="flex justify-center items-center h-10 border-b mx-2 border-gray-300">
// <Link to="/app" className="outline-none text-2xl font-bold title-gradient select-none">
//   SmartStock
// </Link>
// </div>
// <div className="flex flex-1 flex-col gap-2 p-2">
// <SidebarItem to="stock" text="Stock" icon={<AiOutlineShop />} />
// <SidebarItem to="orders" text="Pedidos" icon={<AiOutlineCheckCircle />} />
// <SidebarItem to="customers" text="Clientes" icon={<AiOutlineUser />} />
// <SidebarItem to="catalog" text="Catálogo Online" icon={<AiOutlineCheckCircle />} />
// <SidebarItem to="control" text="Control y seguimiento" icon={<AiOutlineFieldTime />} />
// </div>
// <div>
// <button onClick={() => {
//   localStorage.removeItem("TOKEN")
//   navigate("/")
// }}>Cerrar sesión</button>
// </div>


































// import { Link } from "react-router-dom";
// import React from "react";

// // Icons
// import { AiOutlineCheckCircle, AiOutlineFieldTime } from "react-icons/ai"
// import { AiOutlineUser, AiOutlineShop } from "react-icons/ai"

// /*
// La función SidebarItem():
// Aquí se define una parte de la barra lateral de la aplicación. En React, los componentes son piezas de código que pueden reutilizarse para construir la interfaz de usuario.
// Esta función devuelve un elemento visual (en React se llama JSX) que contiene un icono de icon y el texto que viene de la variable text.
// Esta parte se puede repetir fácilmente para crear varios elementos similares en la barra lateral.

// NOTA: En React, los componentes se llaman como en las etiquetas HTML, pero es como si llamara a la función normalmente, por ejemplo:

// SidebarItem() == <SidebarItem /> == <SidebarItem><SidebarItem/>

// Entonces, cuando ve que se llama <SidebarItem />, es lo mismo que SidebarItem()
// Otra cosa es que los <div/> también son funciones pero no vemos la declaración de ninguna función llamada div, eso es porque React la crea para nosotros, hace eso, son todas las etiquetas HTML.
// */
// export function SidebarItem({ text, icon, to }) {
//   return (
//     <Link to={to} className="sidebar-item">
//       <div className="sidebar-item-content">
//         <div className="sidebar-item-center">
//           <div className="sidebar-item-icon">{icon}</div>
//           <div className="sidebar-item-text">{text}</div>
//         </div>
//       </div>
//     </Link>
//   );
// }

// function Sidebar() {
//   return (
//     <div className="sidebar">
//       <div>
//         NetReady
//       </div>
//       <SidebarItem to="/stock" text="Stock" icon={<AiOutlineShop />} />
//       <SidebarItem to="/orders" text="Pedidos" icon={<AiOutlineCheckCircle />} />
//       <SidebarItem to="/customers" text="Clientes" icon={<AiOutlineUser />} />
//       <SidebarItem to="/catalog" text="Catálogo Online" icon={<AiOutlineCheckCircle />} />
//       <SidebarItem to="/control" text="Control y seguimiento" icon={<AiOutlineFieldTime />} />
//     </div>
//   )
// }

// export default Sidebar